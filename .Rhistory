i = i + 1
# daughters_to_permute = setdiff(1:end, getRoot(mytree))
}
reorder = sample(node_list)
i = 1
for (internal_node_id in start:end) {
adjacency[int_node_row[keep[i]], 2] = reorder[i]
i = i + 1
}
adjacency
set.seed(360)
N = 5 # number of tips
mytree = rtree(n = N)
adjacency = mytree$edge
adjacency0 = mytree$edge
# flip a N-1 coins with even chance of swapping first or second daughter
keep = rbinom(n = 4, size = 1, prob = 0.5) + 1
# meaning of output: exchange first daughter node (1) or second daughter node (2)
# for each of the internal nodes, N+1, ..., 2N-1
start = N + 1
end = 2*N - 1
node_list = NULL
i = 1
for (internal_node_id in start:end) {
int_node_row = which(adjacency[,1] == internal_node_id)
node_list = c(node_list, adjacency[int_node_row[keep[i]], 2])
i = i + 1
# daughters_to_permute = setdiff(1:end, getRoot(mytree))
}
reorder = sample(node_list)
i = 1
for (internal_node_id in start:end) {
adjacency[int_node_row[keep[i]], 2] = reorder[i]
i = i + 1
}
adjacency
adjacency0
545000/2145
625/2960
625000/2960
625000/3720
511841/2646
(193.43 + 168.01 + 211.14 + 254.07) / 4
206.66 * 2666
550-129
421/3
421-140
library(matrixsampling)
IWsamples = rinvwishart(N, nu = 3, Omega = Sigma)
set.seed(360)
N = 1000
Sigma = matrix(c(1,.5,.5, 1), ncol = 2)
WishartSigmas = rWishart(N, df = 3, Sigma)
s1sqW = NULL
evalMax = NULL
for(i in 1:N) {
e = eigen(WishartSigmas[, , i])
eval = e$values
evec = e$vectors
evalMax = c(evalMax, max(eval))
s1sqW = c(s1sqW, WishartSigmas[1, 1, i])
}
hist(evalMax)
mean(evalMax)
sd(evalMax)
library(matrixsampling)
IWsamples = rinvwishart(N, nu = 3, Omega = Sigma)
s1sqIW = NULL
for(i in 1:N) {
s1sqIW = c(s1sqIW, IWsamples[1, 1, i])
}
hist(s1sqIW)
library(matrixsampling)
IWsamples = rinvwishart(N, nu = 3, Omega = Sigma)
s1sqIW = NULL
for(i in 1:N) {
s1sqIW = c(s1sqIW, IWsamples[1, 1, i])
}
hist(s1sqIW)
mean(s1sqIW)
range(s1sqIW)
library(matrixsampling)
IWsamples = rinvwishart(N, nu = 3, Omega = Sigma)
s1sqIW = NULL
for(i in 1:N) {
s1sqIW = c(s1sqIW, IWsamples[1, 1, i])
}
hist(s1sqIW)
mean(s1sqIW)
range(s1sqIW)
Sigma
Sigma %*% Sigma
solve(Sigma %*% Sigma)
S2 = solve(Sigma %*% Sigma)
# Sigma is positive definite so symmetric and t(Sigma) = Sigma
S2 = solve(Sigma %*% Sigma)
library(ellipse)
points = ellipse(S2)
plot(points)
eigshow(S2)
# Sigma is positive definite so symmetric and t(Sigma) = Sigma
S2 = solve(Sigma %*% Sigma)
library(ellipse)
points = ellipse(S2)
plot(points)
eigen(S2)
1/4
1/.444
# Sigma is positive definite so symmetric and t(Sigma) = Sigma
S2 = solve(Sigma %*% Sigma)
library(ellipse)
points = ellipse(S2)
plot(points)
eigen(S2)
1/4
1/.444
# Sigma is positive definite so symmetric and t(Sigma) = Sigma
S2 = solve(Sigma %*% Sigma)
S2
library(ellipse)
points = ellipse(S2)
plot(points)
eigen(S2)
1/4
1/.444
# Sigma is positive definite so symmetric and t(Sigma) = Sigma
S2 = solve(Sigma %*% Sigma)
S2
library(ellipse)
points = ellipse(S2)
plot(points)
eigen(S2)
1/sqrt(4)
1/sqrt(.444)
# Sigma is positive definite so symmetric and t(Sigma) = Sigma
S2 = solve(Sigma %*% Sigma)
S2
library(ellipse)
points = ellipse(S2)
plot(points)
eigen(S2)
1/sqrt(4)
1/sqrt(.444)
S
# Sigma is positive definite so symmetric and t(Sigma) = Sigma
S2 = solve(Sigma %*% Sigma)
S2
library(ellipse)
points = ellipse(S2)
plot(points)
eigen(S2)
1/sqrt(4)
1/sqrt(.444)
Sigma
# Sigma is positive definite so symmetric and t(Sigma) = Sigma
S2 = solve(Sigma %*% Sigma)
S2
library(ellipse)
points = ellipse(S2)
plot(points)
eigen(S2)
1/sqrt(4)
1/sqrt(.444)
Sigma
eigen(Sigma)
rchisq(1, df = 3)
?rchisq
rchisq(1, df = 3)
rchisq(1000, df = 3)
rWish
Sigma
Sigma
rWishart(n = 1000, df = 3, Sigma = Sigma)
rchisq(1000, df = 3)
Sigma
X = rWishart(n = 1000, df = 3, Sigma = Sigma)
x11 = rchisq(1000, df = 3)
X
Sigma
X = rWishart(n = 1000, df = 3, Sigma = Sigma)
x11 = rchisq(1000, df = 3)
# for
# x11_Wishart = X[,]
Sigma
N = 1000
X = rWishart(n = N, df = 3, Sigma = Sigma)
x11 = rchisq(n = N, df = 3)
# x11 from Wishart
x11_W = NULL
for(i in 1:N) {
x11_W = c(x11_W, X[1, 1, i])
}
# for
# x11_Wishart = X[,]
Sigma
N = 1000
X = rWishart(n = N, df = 3, Sigma = Sigma)
x11 = rchisq(n = N, df = 3)
# x11 from Wishart
x11_W = NULL
for(i in 1:N) {
x11_W = c(x11_W, X[1, 1, i])
}
hist(x11_W)
Sigma
N = 1000
X = rWishart(n = N, df = 3, Sigma = Sigma)
x11 = rchisq(n = N, df = 3)
# x11 from Wishart
x11_W = NULL
for(i in 1:N) {
x11_W = c(x11_W, X[1, 1, i])
}
hist(x11_W)
hist(x11)
Sigma
N = 1000
X = rWishart(n = N, df = 3, Sigma = Sigma)
x11 = rchisq(n = N, df = 3)
# x11 from Wishart
x11_W = NULL
for(i in 1:N) {
x11_W = c(x11_W, X[1, 1, i])
}
hist(x11_W)
hist(x11)
mean(x11_W)
mean(x11)
Sigma
N = 1000
X = rWishart(n = N, df = 3, Sigma = Sigma)
x11 = rchisq(n = N, df = 3)
# x11 from Wishart
x11_W = NULL
for(i in 1:N) {
x11_W = c(x11_W, X[1, 1, i])
}
hist(x11_W)
hist(x11)
mean(x11_W)
mean(x11)
median(x11)
median(x11_W)
Sigma
N = 1000
X = rWishart(n = N, df = 3, Sigma = Sigma)
x11 = rchisq(n = N, df = 3)
# x11 from Wishart
x11_W = NULL
for(i in 1:N) {
x11_W = c(x11_W, X[1, 1, i])
}
hist(x11_W)
hist(x11)
mean(x11_W)
mean(x11)
median(x11)
median(x11_W)
range(x11)
range(x11_W)
Sigma
N = 1000
DF = 10
X = rWishart(n = N, df = 10, Sigma = Sigma)
x11 = rchisq(n = N, df = 10)
# x11 from Wishart
x11_W = NULL
for(i in 1:N) {
x11_W = c(x11_W, X[1, 1, i])
}
hist(x11_W)
hist(x11)
mean(x11_W)
mean(x11)
median(x11)
median(x11_W)
# range(x11)
# range(x11_W)
Sigma
N = 1000
DF = 3
X = rWishart(n = N, df = 10, Sigma = Sigma)
x11 = rchisq(n = N, df = 10)
# x11 from Wishart
x11_W = NULL
for(i in 1:N) {
x11_W = c(x11_W, X[1, 1, i])
}
hist(x11_W)
hist(x11)
mean(x11_W)
mean(x11)
median(x11)
median(x11_W)
# range(x11)
# range(x11_W)
Sigma
N = 1000
DF = 3
X = rWishart(n = N, df = DF, Sigma = Sigma)
x11 = rchisq(n = N, df = DF)
# x11 from Wishart
x11_W = NULL
for(i in 1:N) {
x11_W = c(x11_W, X[1, 1, i])
}
hist(x11_W)
hist(x11)
mean(x11_W)
mean(x11)
median(x11)
median(x11_W)
# range(x11)
# range(x11_W)
Sigma
N = 10000
DF = 3
X = rWishart(n = N, df = DF, Sigma = Sigma)
x11 = rchisq(n = N, df = DF)
# x11 from Wishart
x11_W = NULL
for(i in 1:N) {
x11_W = c(x11_W, X[1, 1, i])
}
hist(x11_W)
hist(x11)
mean(x11_W)
mean(x11)
median(x11)
median(x11_W)
# range(x11)
# range(x11_W)
Sigma
N = 10000
DF = 5
X = rWishart(n = N, df = DF, Sigma = Sigma)
x11 = rchisq(n = N, df = DF)
# x11 from Wishart
x11_W = NULL
for(i in 1:N) {
x11_W = c(x11_W, X[1, 1, i])
}
hist(x11_W)
hist(x11)
mean(x11_W)
mean(x11)
median(x11)
median(x11_W)
# range(x11)
# range(x11_W)
Sigma = matrix(c(3, .1, .1, 2), ncol = 2)
Sigma
Sigma = matrix(c(3, .1, .1, 2), ncol = 2)
Sigma
sigma11 = sqrt(Sigma[1,1])
N = 10000
DF = 5
X = rWishart(n = N, df = DF, Sigma = Sigma)
x11 = rchisq(n = N, df = DF) * sigma11
# x11 from Wishart
x11_W = NULL
for(i in 1:N) {
x11_W = c(x11_W, X[1, 1, i])
}
hist(x11_W)
hist(x11)
mean(x11_W)
mean(x11)
median(x11)
median(x11_W)
# range(x11)
# range(x11_W)
Sigma = matrix(c(3, .1, .1, 2), ncol = 2)
Sigma
sigma11 = Sigma[1,1]
N = 10000
DF = 5
X = rWishart(n = N, df = DF, Sigma = Sigma)
x11 = rchisq(n = N, df = DF) * sigma11
# x11 from Wishart
x11_W = NULL
for(i in 1:N) {
x11_W = c(x11_W, X[1, 1, i])
}
hist(x11_W)
hist(x11)
mean(x11_W)
mean(x11)
median(x11)
median(x11_W)
# range(x11)
# range(x11_W)
Sigma = matrix(c(3, .1, .1, 2), ncol = 2)
Sigma
sigma11 = Sigma[1,1]
N = 10000
DF = 3
X = rWishart(n = N, df = DF, Sigma = Sigma)
x11 = rchisq(n = N, df = DF) * sigma11
# x11 from Wishart
x11_W = NULL
for(i in 1:N) {
x11_W = c(x11_W, X[1, 1, i])
}
hist(x11_W)
hist(x11)
mean(x11_W)
mean(x11)
median(x11)
median(x11_W)
# range(x11)
# range(x11_W)
Sigma = matrix(c(3, .1, .1, 2), ncol = 2)
Sigma
sigma11 = Sigma[1,1]
N = 10000
DF = 3
X = rWishart(n = N, df = DF, Sigma = Sigma)
x11 = rchisq(n = N, df = DF) * sigma11
# x11 from Wishart
x11_W = NULL
for(i in 1:N) {
x11_W = c(x11_W, X[1, 1, i])
}
hist(x11_W)
hist(x11)
mean(x11_W)
mean(x11)
median(x11)
median(x11_W)
# range(x11)
# range(x11_W)
x = rexp(10000, rate = 9)
hist(x)
x = rexp(10000, rate = 1/9)
hist(x)
hist(x, frequence = TRUE)
hist(x, freq = TRUE)
hist(x, freq = TRUE)
0.2581844 ^2
-0.9660956 ^ 2
.93333 + 0.0666
2.5*40*1.3
40/1.8
22.2*14
# Sigma is positive definite so symmetric and t(Sigma) = Sigma
S2 = solve(Sigma %*% Sigma)
S2
library(ellipse)
points = ellipse(S2)
plot(points)
eigen(S2)
1/sqrt(4)
1/sqrt(.444)
Sigma
eigen(Sigma)
S2
eigen(S2)
1/sqrt(.11038)
Sigma
S
S = matrix(c(1, 0, 2, 0), nrow = 2)
S
S = matrix(c(1, 0, 0, 2), nrow = 2)
library(ellipse)
points = ellipse(S)
plot(points)
S = matrix(c(1, 0, 0, 2), nrow = 2)
S
library(ellipse)
points = ellipse(S)
plot(points)
points = ellipse(S, level = 0.95)
points = ellipse(S, level = 0.95)
plot(points)
plot(points) / 6.28
S = matrix(c(1, 0, 0, 2), nrow = 2)
S
library(ellipse)
points = ellipse(S, level = 0.95)
plot(points / 6.28)
S = matrix(c(1, 0, 0, 2), nrow = 2)
S
library(ellipse)
points = ellipse(S, level = 0.95)
plot(points)
?ellipse
eigen(S)
S = matrix(c(1, 0, 0, 2), nrow = 2)
S
library(ellipse)
points = ellipse(S, level = 0.5)
plot(points)
eigen(S)
1/ sqrt(2)
x = rmvnorm(1)
x = rmvtnorm(1)
mvtnorm::rmvnorm(1)
Sigma
mvtnorm::rmvnorm(n = 1, mean = c(0, 0), sigma = Sigma)
Sigma
x = mvtnorm::rmvnorm(n = 1000, mean = c(0, 0), sigma = Sigma)
x
x[,1] * x[,2]
Sigma
x = mvtnorm::rmvnorm(n = 1000, mean = c(0, 0), sigma = Sigma)
hist(x[,1] * x[,2])
Sigma
Sigma
x = mvtnorm::rmvnorm(n = 1000, mean = c(0, 0), sigma = Sigma)
hist(x[,1] * x[,2])
hist(rgamma(10000, 90, 1))
